name: Release new version

on:
  push:
    tags:
      - '*.*.*'

jobs:
  publish-storefront:
    name: Publish storefront artifact
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish-docker
        with:
          dockerfile: apps/storefront/Dockerfile
          container-name: webshop-storefront
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}

  publish-dashboard:
    name: Publish dashboard artifact
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish-docker
        with:
          dockerfile: apps/dashboard/Dockerfile
          container-name: webshop-dashboard
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}

  publish-mail:
    name: Publish mail artifact
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish-docker
        with:
          dockerfile: apps/mail/Dockerfile
          container-name: webshop-mail
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}

  publish-backend:
    name: Publish backend artifact
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish-jib
        with:
          selector: :apps:backend
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}

  publish-migrations:
    name: Publish migrations artifact
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish-jib
        with:
          selector: :packages:migrations
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}

  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment: staging
    needs: [publish-storefront, publish-dashboard, publish-mail, publish-backend, publish-migrations]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy-stack
        with:
          k8s-url: ${{ vars.K8S_API_URL }}
          k8s-secret: ${{ secrets.K8S_SECRET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          namespace: ${{ vars.K8S_NAMESPACE }}
          hostname: ${{ vars.HOSTNAME }}
          cluster-issuer: ${{ vars.K8S_CLUSTER_ISSUER }}
          app-version: ${{ github.ref_name }}
          mail-hostname: ${{ vars.MAIL_SERVER_HOSTNAME }}
          mail-port: ${{ vars.MAIL_SERVER_PORT }}
          mail-username: ${{ secrets.MAIL_USERNAME }}
          mail-password: ${{ secrets.MAIL_PASSWORD }}
          mail-sender: ${{ vars.MAIL_SENDER }}
          s3-region: ${{ vars.S3_REGION_NAME }}
          s3-bucket: ${{ vars.S3_BUCKET_NAME }}
          s3-access-key: ${{ secrets.S3_ACCESS_KEY }}
          s3-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}

  deploy-production:
    name: Deploy to production
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-staging]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy-stack
        with:
          k8s-url: ${{ vars.K8S_API_URL }}
          k8s-secret: ${{ secrets.K8S_SECRET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          namespace: ${{ vars.K8S_NAMESPACE }}
          hostname: ${{ vars.HOSTNAME }}
          cluster-issuer: ${{ vars.K8S_CLUSTER_ISSUER }}
          app-version: ${{ github.ref_name }}
          mail-hostname: ${{ vars.MAIL_SERVER_HOSTNAME }}
          mail-port: ${{ vars.MAIL_SERVER_PORT }}
          mail-username: ${{ secrets.MAIL_USERNAME }}
          mail-password: ${{ secrets.MAIL_PASSWORD }}
          mail-sender: ${{ vars.MAIL_SENDER }}
          s3-region: ${{ vars.S3_REGION_NAME }}
          s3-bucket: ${{ vars.S3_BUCKET_NAME }}
          s3-access-key: ${{ secrets.S3_ACCESS_KEY }}
          s3-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
